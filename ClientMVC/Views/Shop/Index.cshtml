@using Microsoft.AspNetCore.Http
@model Utility.PaginatedList<Models.Product>
@{
    ViewData["Title"] = "Shop";
    string searchContent = ViewBag.searchContent;
    int min = ViewBag.min;
    int max = ViewBag.max;
    int sort_order = ViewBag.sort_order;
    int TotalProduct = ViewBag.TotalProduct;

    List<Models.Category> categories = ViewBag.Categories;

    var isLogin = Context.Session.Get("IsLoggedIn");
}

<!-- Shop Section Begin -->
<section class="shop spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-3">
                <div class="shop__sidebar">
                    <div class="shop__sidebar__search">
                        <form asp-action="Index">
                            <input type="text" name="searchContent" value="@searchContent" placeholder="Tìm kiếm...">
                            <button type="submit"><span class="icon_search"></span></button>
                        </form>
                    </div>
                    <div class="shop__sidebar__accordion">
                        <div class="accordion" id="accordionExample">
                            <div class="card">
                                <div class="card-heading">
                                    <a data-toggle="collapse" data-target="#collapseOne">Danh Mục</a>
                                </div>
                                <div id="collapseOne" class="collapse show" data-parent="#accordionExample">
                                    <div class="card-body">
                                        <div class="shop__sidebar__categories">
                                            <ul class="nice-scroll">
                                                @foreach (var item in categories)
                                                {
                                                    <li><a asp-action="Index" asp-route-searchContent="@item.Description">@item.Description (@item.Products.Count())</a></li>
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card">
                                <div class="card-heading">
                                    <a data-toggle="collapse" data-target="#collapseTwo">Sắp Xếp Theo Giá</a>
                                </div>
                                <div id="collapseTwo" class="collapse show" data-parent="#accordionExample">
                                    <div class="card-body">
                                        <div class="shop__sidebar__price">
                                            <ul>
                                                @{
                                                    // Tạo hàm trả về tên hiển thị và giới hạn giá
                                                    (string displayName, int minValue, int maxValue) GetPriceRange(int index)
                                                    {
                                                        switch (index)
                                                        {
                                                            case 1:
                                                                return ("0 - 500,000 đ", 0, 500000);
                                                            case 2:
                                                                return ("500,000 - 1,000,000 đ", 500000, 1000000);
                                                            case 3:
                                                                return ("1,000,000 - 3,000,000 đ", 1000000, 3000000);
                                                            case 4:
                                                                return ("3,000,000 - 6,000,000 đ", 3000000, 6000000);
                                                            case 5:
                                                                return ("6,000,000 - 10,000,000 đ", 6000000, 10000000);
                                                            case 6:
                                                                return ("10,000,000+ đ", 10000000, int.MaxValue);
                                                            default:
                                                                return ("", 0, 0);
                                                        }
                                                    }

                                                    for (int i = 1; i <= 6; i++)
{
                                                        var (displayName, minValue, maxValue) = GetPriceRange(i);
                                                        var parms = new { searchContent, min = minValue, max = maxValue, sort_order };

                                                        <li>
                                                            <a asp-action="Index"
                                                               asp-route-searchContent="@parms.searchContent"
                                                               asp-route-min="@parms.min"
                                                               asp-route-max="@parms.max"
                                                               asp-route-sort_order="@parms.sort_order"
                                                               style="@(min == parms.min ? "font-weight:bold;" : "")">
                                                               @displayName
                                                            </a>
                                                        </li>
                                                    }
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-9">
                <div class="shop__product__option">
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="shop__product__option__left">
                                <p>Đang hiển thị 1–12 của @Model.TotalItem kết quả</p>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="shop__product__option__right">
                                <p>Sắp xếp theo giá:</p>
                                <select id="sort-order" onchange="sortProductByPrice()">
                                    <option value="1">Không</option>
                                    <option value="2">Tăng dần</option>
                                    <option value="3">Giảm dần</option>
                                </select>

                                @{
                                    var parms2 = new Dictionary<string, string>
                                        {
                                            { "searchContent", searchContent },
                                            { "min", min.ToString() },
                                            { "max", max.ToString() },
                                            { "sort_order", sort_order.ToString() },
                                        };
                                }
                                <a id="sort-link" class="btn btn-primary" asp-action="Index" asp-all-route-data="@parms2">Sắp xếp</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="product-list">
                    @foreach(var item in Model)
                    {
                        <div class="col-lg-4 col-md-6 col-sm-6">
                            <div class="product__item sale">
                                <div class="product__item__pic set-bg">
                                    <img class="product__item__pic set-bg" src="@item.Thumbnail"/>
                                    @if (item.CreateAt >= DateTime.Now.AddDays(-7))
                                    {
                                        <span class="label">Mới</span>
                                    }
                                    <ul class="product__hover">
                                        <li><a href="@Url.Action("ProductDetail", "Shop", new { id = item.Id })"><img src="~/img/icon/search.png" alt="@item.Title"></a></li>
                                    </ul>
                                </div>
                                <div class="product__item__text">
                                    <h6>@item.Title</h6>
                                    @if(isLogin is null)
                                    {
                                        <a asp-action="Login" asp-controller="Account">Login to buy</a>
                                    }
                                    else
                                    {
                                        <a style="cursor: pointer" id="addCart" class="add-cart" data-id="@item.Id">+ Thêm vào giỏ hàng</a>
                                    }

                                    @{
                                        int? numberOfStar = null;
                                        if (item.Reviews.Any())
                                        {
                                            numberOfStar = item.Reviews.Sum(x => x.Rate) / item.Reviews.Count();
                                        }
                                    }

                                    <div class="rating">
                                        @for(int i = 0; i < 5; i++)
                                        {
                                            if(i < numberOfStar)
                                            {
                                                <i class="fa fa-star"></i>
                                            }
                                            else
                                            {
                                                <i class="fa fa-star-o"></i>
                                            }
                                        }
                                        <i hidden class="fa fa-star"></i>
                                    </div>

                                    <h5>@string.Format("{0:#,##0} đ", item.RecentPrice)</h5>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="product__pagination">
                            @{
                                var smallPage = (Model.PageIndex-2)>0 ? Model.PageIndex-2 : 1;
                                int bigPage = (Model.PageIndex+2)<=Model.TotalPages ? Model.PageIndex+2 : Model.TotalPages;

                                for (var j = smallPage; j<=bigPage; j++)
                                {
                                    var parms3 = new Dictionary<string, string>
                                        {
                                            { "searchContent", searchContent },
                                            { "min", min.ToString() },
                                            { "max", max.ToString() },
                                            { "sort_order", sort_order.ToString() },
                                            { "pageIndex", j.ToString() },
                                        };
                                    string isActive = j == Model.PageIndex ? "active" : "";
                                    <a class="@isActive" asp-action="Index" asp-all-route-data="@parms3">@j</a>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Shop Section End -->

<script>
    const selectElement = document.getElementById('sort-order');
    const sortLink = document.getElementById('sort-link');
    document.getElementById("sort-order").value = @sort_order.ToString();

    function sortProductByPrice() {
        const selectedValue = selectElement.value;
        const newHref = `/Shop?searchContent=@searchContent&min=@min&max=@max&sort_order=${selectedValue}`;
        sortLink.href = newHref;
    }

    $(document).ready(function () {
        var id = $(this).closest('.product__item').data('id');
        var buttons = document.querySelectorAll('#addCart');
        buttons.forEach(function (button) {
            button.addEventListener('click', function () {
                var productId = this.dataset.id;

                $.ajax({
                    url: urlAddProductToCart,
                    type: 'POST',
                    beforeSend: function(xhr) {
                        xhr.setRequestHeader('Authorization', token);
                    },
                    data: JSON.stringify({ ProductId: productId }),
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    success: function (data) {
                        toastr.success(messSuccess);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        toastr.error(messError);
                    }
                });
            });
        });
    });
</script>