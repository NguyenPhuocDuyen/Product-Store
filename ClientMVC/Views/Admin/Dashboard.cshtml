@using Models;
@using Microsoft.AspNetCore.Http
@{
    ViewData["Title"] = "Thống Kê";

    List<User> listUser = ViewBag.ListUser;    
    List<Order> listOrder = ViewBag.ListOrder;
    List<Product> listProduct = ViewBag.ListProduct;
}
<div class="container-fluid p-5">
    <div class="row py-5">
        <div class="col-md-4">
            <h2>Số lượng user</h2>
            <div class="card">
                <div class="card-body">
                    <h1 id="num-users">@listUser.Count</h1>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <h2>Số lượng order</h2>
            <div class="card">
                <div class="card-body">
                    <h1 id="num-orders">@listOrder.Count</h1>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <h2>Số lượng sản phẩm</h2>
            <div class="card">
                <div class="card-body">
                    <h1 id="num-products">@listProduct.Count</h1>
                </div>
            </div>
        </div>
    </div>
    <div class="row py-5">
        <h2 class="text-center w-100">Biểu đồ thống kê</h2>
        <div class="col-md-12 d-flex">
            <!-- Biểu đồ số lượng sản phẩm -->
            <div class="col-md-4">
                <canvas id="product-chart" class=""></canvas>
            </div>
            <!-- Biểu đồ số lượng đơn hàng -->
            <div class="col-md-4">
                <canvas id="order-chart" class=""></canvas>
            </div>
            <!-- Biểu đồ số lượng người dùng -->
            <div class="col-md-4">
                <canvas id="user-chart" class=""></canvas>
            </div>
        </div>
    </div>
    <div class="row py-5">
        <div class="col-md-12">
            <h2>Danh sách user</h2>
            <table id="table-user" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Tên</th>
                        <th>Email</th>
                        <th>Số điện thoại</th>
                        <th>Địa chỉ</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
    <div class="row py-5">
        <div class="col-md-12">
            <h2>Danh sách order</h2>
            <table id="table-order" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Tên khách hàng</th>
                        <th>Địa chỉ</th>
                        <th>Trạng thái</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
    <div class="row py-5">
        <div class="col-md-12">
            <h2>Danh sách sản phẩm</h2>
            <table id="table-product" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Tên sản phẩm</th>
                        <th>Giá</th>
                        <th>Số lượng tồn kho</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

<!-- Script tạo các bảng và biểu đồ -->
<script>
    $(document).ready(function () {

        reloadTableUser();
        reloadTableOrder();
        reloadTableProduct();
        //list user
        function reloadTableUser(){
            var table = $('#table-user').DataTable({
                "ajax": {
                    "url": urlGetUsers,
                    "type": "GET",
                    "beforeSend": function(xhr) {
                            xhr.setRequestHeader('Authorization', token);
                        },
                    "contentType": "application/json",
                    "datatype": "json",
                    "dataSrc": ""
                },
                "columns": [
                    { "data": "id" },
                    { "data": "email" },
                    { "data": "fullName" },
                    { "data": "phone" },
                    { "data": "address" }
                ]
            });
        }

        function reloadTableOrder(){
            var table = $('#table-order').DataTable({
                "ajax": {
                    "url": urlGetOrdersOfUser,
                    "beforeSend": function(xhr) {
                            xhr.setRequestHeader('Authorization', token);
                        },
                    "type": "GET",
                    "contentType": "application/json",
                    "datatype": "json",
                    "dataSrc": ""
                },
                "columns": [
                    { "data": "id" },
                    { "data": "user.fullName" },
                    { "data": "orderAddress" },
                    { "data": "status.title" },
                    { 
                        "data": null, 
                        "render": function(data, type, row) {
                            var classBtn = row.statusId == 1 ? 'btn-success' : 'btn-primary';
                            return '<a class="btn ' + classBtn + '" href="'+urlLocal+'Customer/OrderDetail/'+row.id+'">Chi tiết</a>';
                        }
                    }
                ]
            });
        }

        function reloadTableProduct(){
            var table = $('#table-product').DataTable({
                "ajax": {
                    "url": urlGetProducts,
                    "type": "GET",
                    "contentType": "application/json",
                    "datatype": "json",
                    "dataSrc": ""
                },
                "columns": [
                    { "data": "id" },
                    { "data": "title" },
                    { "data": "recentPrice" },
                    { "data": "amount" },
                    { "data": null, render: function(data, type, row) {
                        return '<a class="btn btn-success" href="'+urlLocal+'Admin/UpdateProduct/'+row.id+'">Cập nhật</a>';
                    }}
                ]
            });
        }
    });


    // Dữ liệu số lượng người dùng
    var activeUserCount = 150;
    var inactiveUserCount = 50;

    // Dữ liệu số lượng đơn hàng
    var orderCounts = [12, 19, 3, 5, 2, 3, 7, 9, 10, 2, 8, 11];

    // Dữ liệu số lượng sản phẩm
    var productLabels = ['Product A', 'Product B', 'Product C', 'Product D', 'Product E'];
    var productCounts = [30, 50, 20, 10, 40];

    // Tạo biểu đồ
    var userChart = new Chart(document.getElementById('user-chart'), {
        type: 'pie',
        data: {
            labels: ['Active Users', 'Inactive Users'],
            datasets: [{
                label: 'User Count',
                data: [activeUserCount, inactiveUserCount],
                backgroundColor: ['#007bff', '#dc3545']
            }]
        },
        options: {
            title: {
                display: true,
                text: 'User Statistics'
            }
        }
    });

    var orderChart = new Chart(document.getElementById('order-chart'), {
        type: 'bar',
        data: {
            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
            datasets: [{
                label: 'Order Count',
                data: orderCounts,
                backgroundColor: '#007bff'
            }]
        },
        options: {
            title: {
                display: true,
                text: 'Order Statistics'
            },
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });

    var productChart = new Chart(document.getElementById('product-chart'), {
        type: 'line',
        data: {
            labels: productLabels,
            datasets: [{
                label: 'Product Count',
                data: productCounts,
                fill: false,
                borderColor: '#007bff'
            }]
        },
        options: {
            title: {
                display: true,
                text: 'Product Statistics'
            },
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
</script>