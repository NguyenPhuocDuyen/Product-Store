@using Models;
@model IEnumerable<Models.OrderDetail>
@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "OrderDetail";
    Order order = ViewBag.Order;
    int? total = 0;
    string role = Context.Session.GetString("role");
    string token = Context.Session.GetString("token");
}

<div class="container-fluid p-5">
    <h4>Chi Tiết Đơn Hàng - Mã Đơn: @order.Id</h4>
    <h5>Tên: @order.User.FullName - SDT: @order.User.Phone - Địa chỉ: @order.OrderAddress</h5>
    <table id="orderTable" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>
                    Sản Phẩm
                </th>
                <th>
                    Số Lượng Mua
                </th>
                <th>
                    Giá Mua
                </th>
                <th>
                    Tổng Tiền Sản Phẩm
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model) {
                total += item.Amount * item.PaymentPrice;
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaymentPrice)
                    </td>
                    <td>
                        @string.Format("{0:#,##0} VND", item.Amount*item.PaymentPrice)
                    </td>
                    <td>
                        <a class="btn btn-primary" asp-action="ProductDetail" asp-controller="Shop" asp-route-id="@item.ProductId">Xem sản phẩm</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="d-flex justify-content-end">
        <div class="p-2">
            <h4>Tổng Tiền: @string.Format("{0:#,##0} VND", total)</h4>
        </div>
        <div class="p-2">
            @{
                if (order.StatusId == 1)
                {
                    if (role == RoleContent.Admin)
                    {
                        <button data-id="@order.Id" data-statusId="2" class="btn btn-success btn-sm order-action-btn">Xác nhận giao đơn hàng</button>
                    }
                    <button data-id="@order.Id" data-statusId="4" class="btn btn-danger btn-sm order-action-btn">Hủy đơn hàng</button>
                }
                if (order.StatusId == 2 && role == RoleContent.Customer)
                {
                    <button data-id="@order.Id" data-statusId="3" class="btn btn-success btn-sm order-action-btn">Nhận hàng</button>
                    <button data-id="@order.Id" data-statusId="4" class="btn btn-danger btn-sm order-action-btn">Hủy nhận đơn hàng</button>
                }
            }
        </div>
    </div>
</div>
<script>
    $(document).ready(function() {
        var token = 'Bearer @Html.Raw(token)';
        $('.order-action-btn').click(function() {
            var id = $(this).data('id');
            var statusId = $(this).data('statusid');
            $.ajax({
                url: 'https://localhost:44364/api/apigateway/Orders/ConfirmOrder',
                type: 'POST',
                beforeSend: function(xhr) {
                        xhr.setRequestHeader('Authorization', token);
                },
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({
                    Id: id,
                    StatusId: statusId
                }),
                success: function(response) {
                    toastr.success('Thành công Trang sẽ được tải lại!');
                    setTimeout(function () {
                        location.reload();
                    }, 2000);
                },
                error: function(xhr) {
                    toastr.error('Có lỗi xảy ra vui lòng thử lại sau!');
                }
            });
        });

    });
</script>
