@using Microsoft.AspNetCore.Http
@model List<Models.Cart>
@{
    ViewData["Title"] = "Giỏ Hàng";
}

<!-- Shopping Cart Section Begin -->
<section class="shopping-cart spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="shopping__cart__table">
                    <table>
                        <thead>
                            <tr>
                                <th>Thông tin sản phẩm</th>
                                <th>Số lượng</th>
                                <th>Tổng</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int? totalPrice = 0;
                            }
                            @foreach (var item in Model)
                            {
                                <tr class="product_cart" data-id="@item.Id">
                                    <td class="product__cart__item">
                                        <div class="product__cart__item__pic">
                                            <img style="max-height: 90px" src="@item.Product.Thumbnail" alt="">
                                            @*<img src="/img/shopping-cart/cart-1.jpg" alt="">*@
                                        </div>
                                        <div class="product__cart__item__text">
                                            <a asp-action="ProductDetail" asp-controller="Shop" asp-route-id="@item.Product.Id">
                                                <h6>@item.Product.Title</h6>
                                            </a>
                                            <h5>@string.Format("{0:#,##0} đ", item.Product.RecentPrice)</h5>
                                        </div>
                                    </td>
                                    <td class="quantity__item">
                                        <div class="quantity">
                                            <div class="w-auto">
                                                <input class="quantity-input w-50" type="number" min="1" value="@item.Quantity">
                                            </div>
                                        </div>
                                    </td>
                                    @{
                                        var totalPriceofProduct = item.Product.RecentPrice * item.Quantity;
                                        totalPrice += totalPriceofProduct;
                                    }
                                    <td class="cart__price" id="price-@item.Id">@string.Format("{0:#,##0} đ", totalPriceofProduct)</td>
                                    <td class="cart__close">
                                        <button class="btn btn-default" data-href="@item.Product.Title" runat="server" data-id="@item.Id" data-toggle="modal" data-target="#confirm-delete">
                                            <i style="cursor: pointer" class="deleteProduct fa fa-close"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <div class="continue__btn">
                            <a asp-action="Index" asp-controller="Shop">Vào shop</a>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <div class="continue__btn update__btn">
                            <a id="checkQuantity" style="cursor: pointer"><i class="fa fa-spinner"></i>Kiểm tra số lượng</a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="cart__discount">
                    <h6>Mã giảm giá</h6>
                    <form action="#">
                        <input type="text" placeholder="Mã giảm giá">
                        <button type="submit">Áp dụng</button>
                    </form>
                </div>
                <div class="cart__total">
                    <h6>Tổng tiền giỏ hàng</h6>
                    <ul>
                        <li>Tổng tiền trừ <span>0 VND</span></li>
                        <li>Tổng <span id="total">@string.Format("{0:#,##0} đ", totalPrice)</span></li>
                    </ul>
                    <a data-toggle="modal" data-target="#confirm-order" class="primary-btn text-white" style="cursor: pointer">Đặt hàng</a>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Xác nhận xoá sản phẩm khỏi giỏ hàng</h4>
                </div>

                <div class="modal-body">
                    <p>Sản phẩm sẽ được xoá ra khỏi giỏ hàng của bạn.</p>
                    <p>Bạn có chắc là muốn xoá chứ?</p>
                    <p class="debug-url"></p>
                </div>

                <div class="modal-footer">
                    <button id="confirm-delete-no" type="button" class="btn btn-default" data-dismiss="modal">Huỷ</button>
                    <button id="confirm-delete-yes" class="btn btn-danger btn-ok">Xác nhận xoá</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="confirm-order" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Xác nhận đặt hàng</h4>
                </div>

                <div class="modal-body">
                    <p>Đơn hàng sẽ được tạo cho bạn.</p>
                    <p>Bạn đã chắc là sẽ đặt hàng?</p>
                    <p class="debug-url"></p>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Huỷ</button>
                    <button class="btn btn-success btn-ok">Xác nhận đặt hàng</button>
                </div>
            </div>
        </div>
    </div>

</section>
<!-- Shopping Cart Section End -->
<script>
$(document).ready(function () {

    //delele product in cart
    $('#confirm-delete').on('show.bs.modal', function (e) {
        var id = $(e.relatedTarget).data('id');
        $(this).find('.btn-ok').off('click').on('click', function () {
            $('tr[data-id="' + id + '"]').remove();

            ajaxRequest(urlDeleteCart + id, 'DELETE', null, function(xhr) {
                xhr.setRequestHeader('Authorization', token);
            }, function(response) {
                calculateTotalPrice();
                toastr.success(messSuccess);
                $('#confirm-delete').modal('hide');
            }, function(jqXHR, textStatus, errorThrown) {
                toastr.error(messError);
                var error = JSON.parse(jqXHR.responseText);
                toastr.error(error.error);
            });
        });
        $('#confirm-delete').modal('hide');
        $('.modal-backdrop').remove();
    });

    //confirm order
    $('#confirm-order').on('show.bs.modal', function (e) {
        var id = $(e.relatedTarget).data('id');
        $(this).find('.btn-ok').off('click').on('click', function () {

            ajaxRequest(urlOrderProducts, 'GET', null, function(xhr) {
                xhr.setRequestHeader('Authorization', token);
            }, function(response) {
                toastr.success(messSuccess, '', { timeOut: 5000 });
                $('#confirm-order').modal('hide');
                $('.product_cart').remove();
                // Update cart item prices to 0
                $('#total').text('0 đ');
            }, function(jqXHR, textStatus, errorThrown) {
                toastr.error(messError);
                var error = JSON.parse(jqXHR.responseText);
                toastr.error(error.error);
            });
        });
        $('#confirm-order').modal('hide');
        $('.modal-backdrop').remove();
    });

    // call api to update quantity
    $(document).on('change', '.quantity-input', function () {
        var inputValue = $(this).val();
        if (!Number.isInteger(parseInt(inputValue)) || parseInt(inputValue) < 1) {
            alert('Vui lòng nhập số lượng hợp lệ');
            $(this).val($(this).attr('value'));
            return;
        }

        var id = $(this).closest('tr').data('id');
        var quantity = parseInt(inputValue);

        // call api to update quantity in cart
        ajaxRequest(urlPutCart, 'PUT', JSON.stringify({ Id: id, Quantity: quantity }), function(xhr) {
            xhr.setRequestHeader('Authorization', token);
        }, function(response) {
            $('tr[data-id="' + id + '"] .cart__price').text((response.product.recentPrice * quantity) + ' VND');
            $('tr[data-id="' + id + '"] .quantity-input').val(response.quantity);
            calculateTotalPrice();
            if (quantity != response.quantity) {
                toastr.error('Số lượng đạt tới giới hạn trong kho!');
            }
        }, function(jqXHR, textStatus, errorThrown) {
            toastr.error(messError);
        });
    });

    //total price
    function calculateTotalPrice() {
        var totalPrice = 0;
        $('.product_cart').each(function () {
            var quantity = $(this).find('.quantity-input').val();
            var price = $(this).find('.product__cart__item__text h5').text().replace(' đ', '').replace(',', '');
            var total = quantity * price;
            $(this).find('.cart__price').text(total.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }));
            totalPrice += total;
        });
        $('#total').text(totalPrice.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }));
    }

    //check quantity
    $(document).on('click', '#checkQuantity', function () {
        ajaxRequest(urlCheckQuantityCart, 'GET', null, function(xhr) {
            xhr.setRequestHeader('Authorization', token);
        }, function(response) {
            toastr.success(messSuccess + ' Sẽ tiến hành tải lại trang!');
            setTimeout(function () {
                location.reload();
            }, 2000);
        }, function(jqXHR, textStatus, errorThrown) {
            toastr.error(messError);
        });
    });
});
</script>
