@model Models.User
@using Microsoft.AspNetCore.Http
@{
   ViewData["Title"] = "Thông Tin Khách Hàng";
}
<div class="row">
    <div class="container my-5">
        <h4>Thông tin người dùng</h4>
        <div class="row justify-content-center m-5">
            <div class="col-md-4">
                @*<form>*@
                    @*<div asp-validation-summary="ModelOnly" class="text-danger"></div>*@
                    
                    <div class="form-group">
                        <p>Email</p>
                        <p>@Model.Email</p>
                    </div>
                    <div class="form-group">
                        <label asp-for="FullName" class="control-label"></label>
                        <input asp-for="@Model.FullName" required readonly class="form-control" />
                        <span asp-validation-for="FullName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Phone" class="control-label"></label>
                        <input asp-for="@Model.Phone" required readonly class="form-control" />
                        <span asp-validation-for="Phone" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Address" class="control-label"></label>
                        <input asp-for="@Model.Address" required readonly class="form-control" />
                        <span asp-validation-for="Address" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <span id="info-error" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <button id="updateUser" class="btn btn-primary" >Cập Nhật Thông Tin</button>
                    </div>
                @*</form>*@
            </div>
            <div class="col-md-4">
                @*<form>*@
                    @*<div asp-validation-summary="ModelOnly" class="text-danger"></div>*@
                    <div class="form-group">
                        <label asp-for="Password" class="control-label"></label>
                        <input asp-for="@Model.Password" required readonly type="password" class="form-control" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="confirm-password" class="control-label">Xác nhận mật khẩu</label>
                        <input type="password" readonly required class="form-control" id="confirm-password" />
                        <span id="confirm-password-error" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <button id="updatePassword" class="btn btn-primary">Cập Nhật Mật Khẩu</button>
                    </div>
                @*</form>*@
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


<script>
    $(document).ready(function() {
        var fullNameInput = $("input[name='FullName']");
        var phoneInput = $("input[name='Phone']");
        var addressInput = $("input[name='Address']");
        const errorInfo = document.getElementById("info-error");


        function validateInfo() {
            if (!fullNameInput.val() || !phoneInput.val() || !addressInput.val() ) {
                errorInfo.innerHTML = "Thông tin không được trống!";
                return false;
            } else {
                errorInfo.innerHTML = "";
                return true;
            }
        }

        $('#updateUser').off('click').on('click', function() {
            fullNameInput.removeAttr('readonly');
            phoneInput.removeAttr('readonly');
            addressInput.removeAttr('readonly');

            $('#updateUser').text('Xác Nhận Cập Nhật');
            $('#updateUser').on('click', function() {
                var valid2 = validateInfo();
                if (valid2) {
                    var data = {
                        FullName: fullNameInput.val(),
                        Phone: phoneInput.val(),
                        Address: addressInput.val()
                    };
                    $.ajax({
                        type: "POST",
                        url: urlUpdateInfoUser,
                        data: JSON.stringify(data),
                        contentType: "application/json",
                        beforeSend: function(xhr) {
                            xhr.setRequestHeader('Authorization', token);
                        },
                        success: function(response) {
                            $('#updateUser').text('Cập Nhật Thông Tin');
                            $('#updateUser').removeClass('btn-primary').addClass('btn-success');
                            toastr.success(messSuccess);
                        },
                        error: function(xhr, textStatus, errorThrown) {
                            toastr.error(messError);
                        }
                    });
                }
            });
        });

        var password = document.getElementById("Password");
        var confirmPassword = document.getElementById("confirm-password");
        var confirmPasswordError = document.getElementById("confirm-password-error");


        // Thêm sự kiện cho các phần tử trong form
        password.onchange = validatePassword;
        confirmPassword.onkeyup = validatePassword;

        $('#updatePassword').on('click', function(event) {
            event.preventDefault();
            password.removeAttribute('readonly');
            confirmPassword.removeAttribute('readonly');

            $('#updatePassword').text('Xác Nhận Cập Nhật');
            $('#updatePassword').off('click').on('click', function() {
                var valid = validatePassword();
                if (valid) {
                    var data = {
                        Password: password.value
                    };
                    $.ajax({
                        type: "POST",
                        url: urlUpdateInfoUser,
                        data: JSON.stringify(data),
                        contentType: "application/json",
                        beforeSend: function(xhr) {
                            xhr.setRequestHeader('Authorization', token);
                        },
                        success: function(response) {
                            $('#updatePassword').text('Cập Nhật Mật Khẩu');
                            $('#updatePassword').removeClass('btn-primary').addClass('btn-success');
                            toastr.success(messSuccess);
                        },
                        error: function(xhr, textStatus, errorThrown) {
                            toastr.error(messError);
                        }
                    });
                }
            });
        });

        function validatePassword() {
            if (password.value == '') {
                confirmPasswordError.innerHTML = "Mật khẩu không được trống!";
                confirmPassword.setCustomValidity("Mật khẩu không được trống!");
                return false;
            }
            if (password.value != confirmPassword.value) {
                confirmPasswordError.innerHTML = "Mật khẩu xác nhận không giống nhau!";
                confirmPassword.setCustomValidity("Mật khẩu xác nhận không giống nhau!");
                return false;
            } else {
                confirmPasswordError.innerHTML = "";
                confirmPassword.setCustomValidity("");
                return true;
            }
        }

        
    });

</script>
